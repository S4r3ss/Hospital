<html>
  <link
    rel=
"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"
    type="text/css"
  />
  <script src=
"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  <script
    src=
"https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"
    type="text/javascript"
  ></script>
  <script src=
"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
  
  <script src=
"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.min.js"></script>
  <style>
    
    h2 {
      text-align: center;
      font-family: "Verdana", sans-serif;
      font-size: 30px;
    }
  </style>
  <body>
    <div>
        <div class="m-5">
            <canvas id="myChart"></canvas>
        </div>
        <div class="pt-5">
             <canvas id="myChart2"></canvas>
        </div>
        <div class="pt-5">
             <canvas id="myChart3"></canvas>
        </div>
    </div>


    @foreach(var m in Model)
    {
        <p hidden id="doctor" doctorID="@m.Doctor.Id" fullname="@m.Doctor.FullName" name="@m.Doctor.Name" "number=@m.Doctor.Number" position="@m.Doctor.Position" address="@m.Doctor.Address" age="@m.Doctor.Age"></p>
    }

    @foreach(var m in Model)
        @foreach(var a in m.Appointment)
        {
            <p hidden id="appointment" doctorID=@a.DoctorID></p>
        }
    @foreach(var m in Model)
    {
        <p hidden id="DoctorRating" DoctorRating=@m.DoctorRating doctorID=@m.Doctor.Id></p>
    }
</body>
  
<script>
    var doctors = document.querySelectorAll('[id=doctor]');
    var appointments = document.querySelectorAll('[id=appointment]');
    var doctorRating = document.querySelectorAll('[id=DoctorRating]');
    var appointmentCount = [];
    var doctorNames = [];
    var rating = [];
    var ages = [];
    var sum = 0;
    debugger;
    doctors.forEach(element => {
        var appointments = document.querySelectorAll('[id=appointment][doctorID="' + element.attributes.doctorid.value + '"]');
        appointmentCount.push(appointments.length);

        doctorNames.push(element.attributes.fullname.value);

        var DoctorRating = document.querySelectorAll('[id=DoctorRating][doctorID="' + element.attributes.doctorid.value + '"]');
        DoctorRating.forEach(el => {
            sum += +el.attributes.doctorrating.value;
        });
        rating.push(sum);

        ages.push(element.attributes.age.value);
    });

    rating.push(0);
    appointmentCount.push(0);

    debugger;
    var ctx = document.getElementById("myChart").getContext("2d");
    var myChart = new Chart(ctx, {
        type: "bar",
        data: {
            labels: doctorNames,
            datasets: [
                {
                    label: "Clients count",
                    data: appointmentCount,
                    backgroundColor: "rgba(153,205,1,0.6)",
                },
            ],
        },
        options: {
            scales: {
                xAxes: [{
                    barThickness: 30,
                    maxBarThickness: 30,
                    barPercentage: 0.1
                }]
            }
        }
    });

    var ctx2 = document.getElementById("myChart2").getContext("2d");
    var myChart = new Chart(ctx2, {
        type: "bar",
        data: {
            labels: doctorNames,
            datasets: [
                {
                    label: "Doctor rating",
                    data: rating,
                    backgroundColor: "rgba(153,205,1,0.6)",
                },
            ],
        },
        options: {
            scales: {
                xAxes: [{
                    barThickness: 30,
                    maxBarThickness: 30,
                    barPercentage: 0.1
                }]
            }
        }
    });


    var ctx3 = document.getElementById("myChart3").getContext("2d");
    var myChart = new Chart(ctx3, {
        type: "bar",
        data: {
            labels: doctorNames,
            datasets: [
                {
                    label: "Doctor ages",
                    data: ages,
                    backgroundColor: "rgba(153,205,1,0.6)",
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                },
            ],
        },
        options: {
            scales: {
                xAxes: [{
                    barThickness: 30,
                    maxBarThickness: 30,
                    barPercentage: 0.1
                }]
            }
        }
    });
</script>
</html>